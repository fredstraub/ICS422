install.packages('swirl')
install.packages('igraph')
install.packages('tidyverse')
install.packages('poweRlaw')
install.packages('linkcomm')
install.packages('statnet')
library('igraph')
update.packages()
library(igraph)
setwd("/Users/fred/Github/ICS422/R-Files/Network-Science-Demos") # Set to your location
setwd("/Users/fred/Github/ICS422/R-Files/Networks") # Set to your location
setwd("/Users/fred/Github/ICS422/R-Files") # Set to your location
BPG <- read_graph("Networks/actor-movie.graphml", format="graphml")
BPG
# The type attribute must be logical and differentiates the partitions.
V(BPG)$type
par(mfrow=c(1, 2))
plot(BPG, main = "Bipartite v1")
V(BPG)$type
ifelse(V(BPG)$type, "rectangle", "circle")
igraph_options(
vertex.shape = ifelse(V(BPG)$type, "rectangle", "circle"),
vertex.color = ifelse(V(BPG)$type, "red", "cyan"))
plot(BPG, main = "Bipartite v2")
?layout_as_bipartite
plot(BPG, main = "Bipartite v3",
layout = layout_as_bipartite(BPG))
layout_as_bipartite(BPG)
layout_as_bipartite(BPG)[,2:1] # Select from column 2 to 1: reverses
plot(BPG, main = "Bipartite v4",
layout = layout_as_bipartite(BPG)[,2:1])
-layout_as_bipartite(BPG)[,2:1]
plot(BPG, main = "Bipartite v4",
layout = layout_as_bipartite(BPG)[,2:1])  # old
plot(BPG, main = "Bipartite v5",
layout = -layout_as_bipartite(BPG)[,2:1]) # new
?bipartite_projection
BPG.proj <- bipartite_projection(BPG)
BPG.proj
summary(BPG.proj$proj1)
summary(BPG.proj$proj2)
?bipartite_projection
library('igraph')
# Let's see what your default working directory is:
getwd()
setwd("/Users/fred/Github/ICS422/R-Files") # Set to YOUR version
getwd()
# Here are the contents of your new working directory. It should have a
# Networks subdirectory.
dir()
dir("Networks")
# Read function for common formats. Notice the format options
?read_graph # if this fails you forgot to do library('igraph')
# ----------
# Edgelist - the simplest representation with no labels or attributes
# *** Go to Terminal, cd to Networks if needed and do:
# head Les-Miserables.edgelist
LM.edgelist <- read_graph("Networks/Les-Miserables.edgelist", format="edgelist")
summary(LM.edgelist)
summary(LM.edgelist)
# Notice there are NO attributes of any kind (graph, vertex or edge)
LM.layout <- layout_with_kk(LM.edgelist) # will reuse this layout
plot(LM.edgelist, main = "Les-Miserables.edgelist", layout=LM.layout)
# It defaults to directed, which is incorrect for this data. Fix:
LM.edgelist <- read_graph("Networks/Les-Miserables.edgelist", format="edgelist",
directed=FALSE)
summary(LM.edgelist)
plot(LM.edgelist, main = "Les-Miserables.edgelist", layout=LM.layout)
# ----------
# Pajek's .net - adds labels and weights, but no other attributes
# head Les-Miserables.net
LM.net <- read_graph("Networks/Les-Miserables.net", format="pajek")
summary(LM.net)
# Vertices have id and names and edges have weights. Notice "N"
# If we want to know the unique values for these new attributes
sort(unique(V(LM.net)$name))
sort(unique(E(LM.net)$weight))
